#|
starting sequence
(ql:quickload :sdl2) (ql:quickload :sdl2-image) (load "string-test.cl")
|#

(defvar screen-surface nil)
(defvar *screen-width* 1024)
(defvar *screen-height* 720)
(defvar state 'level)
(defvar sub-state 'top)
(defvar renderer nil)
(defvar accumulator 0)
(defvar selection 0)
(defvar *font* nil)
(defvar *font-color* '(255 255 255 0))

(defvar r 255)
(defvar g 255)
(defvar b 255)
(defvar string-buffer nil)
(defvar r-mod nil)
(defvar g-mod nil)
(defvar b-mod nil)

(defun init-engine ()
  (load "string.cl")
;;;;  (load "engine.lisp")
  )

(defun main ()
  (sdl2:with-init (:everything) ;audio, etc.
    (sdl2:with-window (window :title "Title"
			      :w *screen-width*
			      :h *screen-height*
			      :flags '(:shown))
      (sdl2:with-renderer (default-renderer window)
;;;;	(sdl2-image:init '(:png))
;;;;	(sdl2-mixer:init :ogg)
;;;;	(sdl2-mixer:open-audio 44100 :s16sys 2 1024)
	(setf renderer (sdl2:get-renderer window))
	(init-engine) ;start sdl-mixer somewhere
;;;;	(start-main-menu-music (track-path main-menu-track))
	(sdl2:with-event-loop (:method :poll)
	  (:keydown (:keysym keysym)
;;;;		    (keydown-check (sdl2:scancode keysym))
#|		    (case (sdl2:scancode keysym)
		      (:scancode-up (if (< r 246)
					(incf r 10)))
		      (:scancode-down (if (> r 9)
					  (decf r 10)))
		      (:scancode-left (if (> g 9)
					(decf g 10)))
		      (:scancode-right (if (< g 246)
					   (incf r 10)))
		      (:scancode-r (setf b 0))
		      (:scancode-b (setf b 255))
		    )|#
		    )
#|	  (:keyup (:keysym keysym)
		  (keyup-check (sdl2:scancode keysym))
		  )
|#	  (:idle ()
		 (sdl2:set-render-draw-color renderer 0 0 0 255)
		 (sdl2:render-clear renderer)
		 (game-loop)
		 (sdl2:render-present renderer)
		 (sdl2:delay 30)
		 )
	  (:quit ()
		 t)
	  )))))

(defun modify-colors (r-target g-target b-target)
  "Modifys the text colors. With the first three if statements, in (/ num 20) 20 is the amount of frames the 'flashing' is supposed to be displayed over"
    (if (not r-mod)
	(setf r-mod (round (/ (- 255 r-target) 30)))
	)
    (if (not g-mod)
	(setf g-mod (round (/ (- 255 g-target) 30)))
	)
    (if (not b-mod)
	(setf b-mod (round (/ (- 255 b-target) 30))) 
      )
  (when (and (> r 254)
	     (> g 254)
	     (> b 254))
    (setf r-mod (* r-mod -1))
    (setf g-mod (* g-mod -1))
    (setf b-mod (* b-mod -1))
    )
  (when (and (< r (1+ r-target))
	     (< g (1+ g-target))
	     (< b (1+ b-target)))
    (setf r-mod (* r-mod -1))
    (setf g-mod (* g-mod -1))
    (setf b-mod (* b-mod -1))
    )
  (incf r r-mod)
  (incf g g-mod)
  (incf b b-mod)
  (if (> r 255)
      (setf r 255))
  (if (< r (1+ r-target))
      (setf r r-target))
  (if (> g 255)
      (setf g 255))
  (if (< g (1+ g-target))
      (setf g g-target))
  (if (> b 255)
      (setf b 255))
  (if (< b (1+ b-target))
      (setf b b-target))
  )

(defun game-loop ()
  (let ((w (* 30 16))
	)
    (if (not string-buffer)
	(setf string-buffer (create-text-buffer "Rhythmicdeath, the Cold God-forsaken Hell of Beasts fell in the year 2808 by way of demonic fire."  0 0 :width w :to-texture t))
	)
    (sdl2:set-texture-color-mod string-buffer r g b)
    (modify-colors 227 210 8)
    (sdl2:render-copy renderer
		      string-buffer
		      :source-rect (cffi:null-pointer)
		      :dest-rect (sdl2:make-rect 0 0
						 w 256)
		      )
    ))
